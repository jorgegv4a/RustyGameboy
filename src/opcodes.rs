use std::fs;

#[derive(Debug)]
pub struct Opcode {
    pub length: u8,
    pub cycles: Vec<u8>,
    pub opcode: u16,
    pub name: String
}

impl std::fmt::Display for Opcode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        
        let mut operands_str = String::new();
        operands_str.push_str(&format!("{}", self.cycles[0]));

        if (self.cycles.len() == 2) {
            operands_str.push_str(&format!("/{}", self.cycles[1])); // fmt_hex equivalent
        }

        write!(f, "[Opcode] 0x{:04X} ('{}'), cycles: {}, length: {}", 
         self.opcode, self.name, operands_str, self.length
        )
    }
}


pub fn get_instr(opcode: u16) -> Result<Opcode, &'static str> {
    match opcode {
        0x0000 => Ok(Opcode {cycles: vec![4], length: 1, name: "NOP".to_string(), opcode: 0x0000}),
        0x0001 => Ok(Opcode {cycles: vec![12], length: 3, name: "LD BC, d16".to_string(), opcode: 0x0001}),
        0x0002 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (BC), A".to_string(), opcode: 0x0002}),
        0x0003 => Ok(Opcode {cycles: vec![8], length: 1, name: "INC BC".to_string(), opcode: 0x0003}),
        0x0004 => Ok(Opcode {cycles: vec![4], length: 1, name: "INC B".to_string(), opcode: 0x0004}),
        0x0005 => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC B".to_string(), opcode: 0x0005}),
        0x0006 => Ok(Opcode {cycles: vec![8], length: 2, name: "LD B, d8".to_string(), opcode: 0x0006}),
        0x0007 => Ok(Opcode {cycles: vec![4], length: 1, name: "RLCA".to_string(), opcode: 0x0007}),
        0x0008 => Ok(Opcode {cycles: vec![20], length: 3, name: "DEC BC".to_string(), opcode: 0x0008}),
        0x0009 => Ok(Opcode {cycles: vec![8], length: 1, name: "ADD HL, BC".to_string(), opcode: 0x0009}),
        0x000a => Ok(Opcode {cycles: vec![8], length: 1, name: "LD A, (BC)".to_string(), opcode: 0x000a}),
        0x000b => Ok(Opcode {cycles: vec![8], length: 1, name: "DEC BC".to_string(), opcode: 0x000b}),
        0x000c => Ok(Opcode {cycles: vec![4], length: 1, name: "INC C".to_string(), opcode: 0x000c}),
        0x000d => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC C".to_string(), opcode: 0x000d}),
        0x000e => Ok(Opcode {cycles: vec![8], length: 2, name: "LD C, d8".to_string(), opcode: 0x000e}),
        0x000f => Ok(Opcode {cycles: vec![4], length: 1, name: "RRCA".to_string(), opcode: 0x000f}),
        0x0010 => Ok(Opcode {cycles: vec![4], length: 1, name: "STOP".to_string(), opcode: 0x0010}),
        0x0011 => Ok(Opcode {cycles: vec![12], length: 3, name: "LD DE, d16".to_string(), opcode: 0x0011}),
        0x0012 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (DE), A".to_string(), opcode: 0x0012}),
        0x0013 => Ok(Opcode {cycles: vec![8], length: 1, name: "INC DE".to_string(), opcode: 0x0013}),
        0x0014 => Ok(Opcode {cycles: vec![4], length: 1, name: "INC D".to_string(), opcode: 0x0014}),
        0x0015 => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC D".to_string(), opcode: 0x0015}),
        0x0016 => Ok(Opcode {cycles: vec![8], length: 2, name: "LD D, d8".to_string(), opcode: 0x0016}),
        0x0017 => Ok(Opcode {cycles: vec![4], length: 1, name: "RLA".to_string(), opcode: 0x0017}),
        0x0018 => Ok(Opcode {cycles: vec![12], length: 2, name: "JR i8".to_string(), opcode: 0x0018}),
        0x0019 => Ok(Opcode {cycles: vec![8], length: 1, name: "ADD HL, DE".to_string(), opcode: 0x0019}),
        0x001a => Ok(Opcode {cycles: vec![8], length: 1, name: "LD A, (DE)".to_string(), opcode: 0x001a}),
        0x001b => Ok(Opcode {cycles: vec![8], length: 1, name: "DEC DE".to_string(), opcode: 0x001b}),
        0x001c => Ok(Opcode {cycles: vec![4], length: 1, name: "INC E".to_string(), opcode: 0x001c}),
        0x001d => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC E".to_string(), opcode: 0x001d}),
        0x001e => Ok(Opcode {cycles: vec![8], length: 2, name: "LD E, d8".to_string(), opcode: 0x001e}),
        0x001f => Ok(Opcode {cycles: vec![4], length: 1, name: "RRA".to_string(), opcode: 0x001f}),
        0x0020 => Ok(Opcode {cycles: vec![12, 8], length: 2, name: "JR NZ, i8".to_string(), opcode: 0x0020}),
        0x0021 => Ok(Opcode {cycles: vec![12], length: 3, name: "LD HL, d16".to_string(), opcode: 0x0021}),
        0x0022 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL+), A".to_string(), opcode: 0x0022}),
        0x0023 => Ok(Opcode {cycles: vec![8], length: 1, name: "INC HL".to_string(), opcode: 0x0023}),
        0x0024 => Ok(Opcode {cycles: vec![4], length: 1, name: "INC H".to_string(), opcode: 0x0024}),
        0x0025 => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC H".to_string(), opcode: 0x0025}),
        0x0026 => Ok(Opcode {cycles: vec![8], length: 2, name: "LD H, d8".to_string(), opcode: 0x0026}),
        0x0027 => Ok(Opcode {cycles: vec![4], length: 1, name: "DAA".to_string(), opcode: 0x0027}),
        0x0028 => Ok(Opcode {cycles: vec![12, 8], length: 2, name: "JR Z, i8".to_string(), opcode: 0x0028}),
        0x0029 => Ok(Opcode {cycles: vec![8], length: 1, name: "ADD HL, HL".to_string(), opcode: 0x0029}),
        0x002a => Ok(Opcode {cycles: vec![8], length: 1, name: "LD A, (HL+)".to_string(), opcode: 0x002a}),
        0x002b => Ok(Opcode {cycles: vec![8], length: 1, name: "DEC HL".to_string(), opcode: 0x002b}),
        0x002c => Ok(Opcode {cycles: vec![4], length: 1, name: "INC L".to_string(), opcode: 0x002c}),
        0x002d => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC L".to_string(), opcode: 0x002d}),
        0x002e => Ok(Opcode {cycles: vec![8], length: 2, name: "LD L, d8".to_string(), opcode: 0x002e}),
        0x002f => Ok(Opcode {cycles: vec![4], length: 1, name: "CPL".to_string(), opcode: 0x002f}),
        0x0030 => Ok(Opcode {cycles: vec![12, 8], length: 2, name: "JR NC, i8".to_string(), opcode: 0x0030}),
        0x0031 => Ok(Opcode {cycles: vec![12], length: 3, name: "LD SP, d16".to_string(), opcode: 0x0031}),
        0x0032 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL-), A".to_string(), opcode: 0x0032}),
        0x0033 => Ok(Opcode {cycles: vec![8], length: 1, name: "INC SP".to_string(), opcode: 0x0033}),
        0x0034 => Ok(Opcode {cycles: vec![12], length: 1, name: "INC (HL)".to_string(), opcode: 0x0034}),
        0x0035 => Ok(Opcode {cycles: vec![12], length: 1, name: "DEC (HL)".to_string(), opcode: 0x0035}),
        0x0036 => Ok(Opcode {cycles: vec![12], length: 2, name: "LD (HL), d8".to_string(), opcode: 0x0036}),
        0x0037 => Ok(Opcode {cycles: vec![4], length: 1, name: "SCF".to_string(), opcode: 0x0037}),
        0x0038 => Ok(Opcode {cycles: vec![12, 8], length: 2, name: "JR C, i8".to_string(), opcode: 0x0038}),
        0x0039 => Ok(Opcode {cycles: vec![8], length: 1, name: "ADD HL, SP".to_string(), opcode: 0x0039}),
        0x003a => Ok(Opcode {cycles: vec![8], length: 1, name: "LD A,(HL-)".to_string(), opcode: 0x003a}),
        0x003b => Ok(Opcode {cycles: vec![8], length: 1, name: "DEC SP".to_string(), opcode: 0x003b}),
        0x003c => Ok(Opcode {cycles: vec![4], length: 1, name: "INC A".to_string(), opcode: 0x003c}),
        0x003d => Ok(Opcode {cycles: vec![4], length: 1, name: "DEC A".to_string(), opcode: 0x003d}),
        0x003e => Ok(Opcode {cycles: vec![8], length: 2, name: "LD A, d8".to_string(), opcode: 0x003e}),
        0x003f => Ok(Opcode {cycles: vec![4], length: 1, name: "CCF".to_string(), opcode: 0x003f}),
        0x0040 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, B".to_string(), opcode: 0x0040}),
        0x0041 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, C".to_string(), opcode: 0x0041}),
        0x0042 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, D".to_string(), opcode: 0x0042}),
        0x0043 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, E".to_string(), opcode: 0x0043}),
        0x0044 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, H".to_string(), opcode: 0x0044}),
        0x0045 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, L".to_string(), opcode: 0x0045}),
        0x0046 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD B,(HL)".to_string(), opcode: 0x0046}),
        0x0047 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD B, A".to_string(), opcode: 0x0047}),
        0x0048 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, B".to_string(), opcode: 0x0048}),
        0x0049 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, C".to_string(), opcode: 0x0049}),
        0x004a => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, D".to_string(), opcode: 0x004a}),
        0x004b => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, E".to_string(), opcode: 0x004b}),
        0x004c => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, H".to_string(), opcode: 0x004c}),
        0x004d => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, L".to_string(), opcode: 0x004d}),
        0x004e => Ok(Opcode {cycles: vec![8], length: 1, name: "LD C,(HL)".to_string(), opcode: 0x004e}),
        0x004f => Ok(Opcode {cycles: vec![4], length: 1, name: "LD C, A".to_string(), opcode: 0x004f}),
        0x0050 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, B".to_string(), opcode: 0x0050}),
        0x0051 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, C".to_string(), opcode: 0x0051}),
        0x0052 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, D".to_string(), opcode: 0x0052}),
        0x0053 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, E".to_string(), opcode: 0x0053}),
        0x0054 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, H".to_string(), opcode: 0x0054}),
        0x0055 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, L".to_string(), opcode: 0x0055}),
        0x0056 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD D,(HL)".to_string(), opcode: 0x0056}),
        0x0057 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD D, A".to_string(), opcode: 0x0057}),
        0x0058 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, B".to_string(), opcode: 0x0058}),
        0x0059 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, C".to_string(), opcode: 0x0059}),
        0x005a => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, D".to_string(), opcode: 0x005a}),
        0x005b => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, E".to_string(), opcode: 0x005b}),
        0x005c => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, H".to_string(), opcode: 0x005c}),
        0x005d => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, L".to_string(), opcode: 0x005d}),
        0x005e => Ok(Opcode {cycles: vec![8], length: 1, name: "LD E,(HL)".to_string(), opcode: 0x005e}),
        0x005f => Ok(Opcode {cycles: vec![4], length: 1, name: "LD E, A".to_string(), opcode: 0x005f}),
        0x0060 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, B".to_string(), opcode: 0x0060}),
        0x0061 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, C".to_string(), opcode: 0x0061}),
        0x0062 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, D".to_string(), opcode: 0x0062}),
        0x0063 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, E".to_string(), opcode: 0x0063}),
        0x0064 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, H".to_string(), opcode: 0x0064}),
        0x0065 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, L".to_string(), opcode: 0x0065}),
        0x0066 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD H,(HL)".to_string(), opcode: 0x0066}),
        0x0067 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD H, A".to_string(), opcode: 0x0067}),
        0x0068 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, B".to_string(), opcode: 0x0068}),
        0x0069 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, C".to_string(), opcode: 0x0069}),
        0x006a => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, D".to_string(), opcode: 0x006a}),
        0x006b => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, E".to_string(), opcode: 0x006b}),
        0x006c => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, H".to_string(), opcode: 0x006c}),
        0x006d => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, L".to_string(), opcode: 0x006d}),
        0x006e => Ok(Opcode {cycles: vec![8], length: 1, name: "LD L,(HL)".to_string(), opcode: 0x006e}),
        0x006f => Ok(Opcode {cycles: vec![4], length: 1, name: "LD L, A".to_string(), opcode: 0x006f}),
        0x0070 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),B".to_string(), opcode: 0x0070}),
        0x0071 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),C".to_string(), opcode: 0x0071}),
        0x0072 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),D".to_string(), opcode: 0x0072}),
        0x0073 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),E".to_string(), opcode: 0x0073}),
        0x0074 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),H".to_string(), opcode: 0x0074}),
        0x0075 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),L".to_string(), opcode: 0x0075}),
        0x0076 => Ok(Opcode {cycles: vec![4], length: 1, name: "HALT".to_string(), opcode: 0x0076}),
        0x0077 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD (HL),A".to_string(), opcode: 0x0077}),
        0x0078 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, B".to_string(), opcode: 0x0078}),
        0x0079 => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, C".to_string(), opcode: 0x0079}),
        0x007a => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, D".to_string(), opcode: 0x007a}),
        0x007b => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, E".to_string(), opcode: 0x007b}),
        0x007c => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, H".to_string(), opcode: 0x007c}),
        0x007d => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, L".to_string(), opcode: 0x007d}),
        0x007e => Ok(Opcode {cycles: vec![8], length: 1, name: "LD A,(HL)".to_string(), opcode: 0x007e}),
        0x007f => Ok(Opcode {cycles: vec![4], length: 1, name: "LD A, A".to_string(), opcode: 0x007f}),
        0x0080 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, B".to_string(), opcode: 0x0080}),
        0x0081 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, C".to_string(), opcode: 0x0081}),
        0x0082 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, D".to_string(), opcode: 0x0082}),
        0x0083 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, E".to_string(), opcode: 0x0083}),
        0x0084 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, H".to_string(), opcode: 0x0084}),
        0x0085 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, L".to_string(), opcode: 0x0085}),
        0x0086 => Ok(Opcode {cycles: vec![8], length: 1, name: "ADD A, (HL)".to_string(), opcode: 0x0086}),
        0x0087 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADD A, A".to_string(), opcode: 0x0087}),
        0x0088 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, B".to_string(), opcode: 0x0088}),
        0x0089 => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, C".to_string(), opcode: 0x0089}),
        0x008a => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, D".to_string(), opcode: 0x008a}),
        0x008b => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, E".to_string(), opcode: 0x008b}),
        0x008c => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, H".to_string(), opcode: 0x008c}),
        0x008d => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, L".to_string(), opcode: 0x008d}),
        0x008e => Ok(Opcode {cycles: vec![8], length: 1, name: "ADC A, (HL)".to_string(), opcode: 0x008e}),
        0x008f => Ok(Opcode {cycles: vec![4], length: 1, name: "ADC A, A".to_string(), opcode: 0x008f}),
        0x0090 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB B".to_string(), opcode: 0x0090}),
        0x0091 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB C".to_string(), opcode: 0x0091}),
        0x0092 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB D".to_string(), opcode: 0x0092}),
        0x0093 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB E".to_string(), opcode: 0x0093}),
        0x0094 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB H".to_string(), opcode: 0x0094}),
        0x0095 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB L".to_string(), opcode: 0x0095}),
        0x0096 => Ok(Opcode {cycles: vec![8], length: 1, name: "SUB A, (HL)".to_string(), opcode: 0x0096}),
        0x0097 => Ok(Opcode {cycles: vec![4], length: 1, name: "SUB A".to_string(), opcode: 0x0097}),
        0x0098 => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, B".to_string(), opcode: 0x0098}),
        0x0099 => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, C".to_string(), opcode: 0x0099}),
        0x009a => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, D".to_string(), opcode: 0x009a}),
        0x009b => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, E".to_string(), opcode: 0x009b}),
        0x009c => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, H".to_string(), opcode: 0x009c}),
        0x009d => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, L".to_string(), opcode: 0x009d}),
        0x009e => Ok(Opcode {cycles: vec![8], length: 1, name: "SBC A, (HL)".to_string(), opcode: 0x009e}),
        0x009f => Ok(Opcode {cycles: vec![4], length: 1, name: "SBC A, A".to_string(), opcode: 0x009f}),
        0x00a0 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND B".to_string(), opcode: 0x00a0}),
        0x00a1 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND C".to_string(), opcode: 0x00a1}),
        0x00a2 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND D".to_string(), opcode: 0x00a2}),
        0x00a3 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND E".to_string(), opcode: 0x00a3}),
        0x00a4 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND H".to_string(), opcode: 0x00a4}),
        0x00a5 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND L".to_string(), opcode: 0x00a5}),
        0x00a6 => Ok(Opcode {cycles: vec![8], length: 1, name: "AND A, (HL)".to_string(), opcode: 0x00a6}),
        0x00a7 => Ok(Opcode {cycles: vec![4], length: 1, name: "AND A".to_string(), opcode: 0x00a7}),
        0x00a8 => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR B".to_string(), opcode: 0x00a8}),
        0x00a9 => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR C".to_string(), opcode: 0x00a9}),
        0x00aa => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR D".to_string(), opcode: 0x00aa}),
        0x00ab => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR E".to_string(), opcode: 0x00ab}),
        0x00ac => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR H".to_string(), opcode: 0x00ac}),
        0x00ad => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR L".to_string(), opcode: 0x00ad}),
        0x00ae => Ok(Opcode {cycles: vec![8], length: 1, name: "XOR A, (HL)".to_string(), opcode: 0x00ae}),
        0x00af => Ok(Opcode {cycles: vec![4], length: 1, name: "XOR A".to_string(), opcode: 0x00af}),
        0x00b0 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR B".to_string(), opcode: 0x00b0}),
        0x00b1 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR C".to_string(), opcode: 0x00b1}),
        0x00b2 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR D".to_string(), opcode: 0x00b2}),
        0x00b3 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR E".to_string(), opcode: 0x00b3}),
        0x00b4 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR H".to_string(), opcode: 0x00b4}),
        0x00b5 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR L".to_string(), opcode: 0x00b5}),
        0x00b6 => Ok(Opcode {cycles: vec![8], length: 1, name: "OR A, (HL)".to_string(), opcode: 0x00b6}),
        0x00b7 => Ok(Opcode {cycles: vec![4], length: 1, name: "OR A".to_string(), opcode: 0x00b7}),
        0x00b8 => Ok(Opcode {cycles: vec![4], length: 1, name: "CP B".to_string(), opcode: 0x00b8}),
        0x00b9 => Ok(Opcode {cycles: vec![4], length: 1, name: "CP C".to_string(), opcode: 0x00b9}),
        0x00ba => Ok(Opcode {cycles: vec![4], length: 1, name: "CP D".to_string(), opcode: 0x00ba}),
        0x00bb => Ok(Opcode {cycles: vec![4], length: 1, name: "CP E".to_string(), opcode: 0x00bb}),
        0x00bc => Ok(Opcode {cycles: vec![4], length: 1, name: "CP H".to_string(), opcode: 0x00bc}),
        0x00bd => Ok(Opcode {cycles: vec![4], length: 1, name: "CP L".to_string(), opcode: 0x00bd}),
        0x00be => Ok(Opcode {cycles: vec![8], length: 1, name: "CP A, (HL)".to_string(), opcode: 0x00be}),
        0x00bf => Ok(Opcode {cycles: vec![4], length: 1, name: "CP A".to_string(), opcode: 0x00bf}),
        0x00c0 => Ok(Opcode {cycles: vec![20, 8], length: 1, name: "RET NZ".to_string(), opcode: 0x00c0}),
        0x00c1 => Ok(Opcode {cycles: vec![12], length: 1, name: "POP BC".to_string(), opcode: 0x00c1}),
        0x00c2 => Ok(Opcode {cycles: vec![16, 12], length: 3, name: "JP  NZ, d16".to_string(), opcode: 0x00c2}),
        0x00c3 => Ok(Opcode {cycles: vec![16], length: 3, name: "JP u16".to_string(), opcode: 0x00c3}),
        0x00c4 => Ok(Opcode {cycles: vec![24, 12], length: 3, name: "CALL NZ, d16".to_string(), opcode: 0x00c4}),
        0x00c5 => Ok(Opcode {cycles: vec![16], length: 1, name: "PUSH BC".to_string(), opcode: 0x00c5}),
        0x00c6 => Ok(Opcode {cycles: vec![8], length: 2, name: "ADD A, d8".to_string(), opcode: 0x00c6}),
        0x00c7 => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x0".to_string(), opcode: 0x00c7}),
        0x00c8 => Ok(Opcode {cycles: vec![20, 8], length: 1, name: "RET Z".to_string(), opcode: 0x00c8}),
        0x00c9 => Ok(Opcode {cycles: vec![16], length: 1, name: "RET".to_string(), opcode: 0x00c9}),
        0x00ca => Ok(Opcode {cycles: vec![16, 12], length: 3, name: "JP  Z, d16".to_string(), opcode: 0x00ca}),
        0x00cc => Ok(Opcode {cycles: vec![24, 12], length: 3, name: "CALL Z, d16".to_string(), opcode: 0x00cc}),
        0x00cd => Ok(Opcode {cycles: vec![24], length: 3, name: "CALL d16".to_string(), opcode: 0x00cd}),
        0x00ce => Ok(Opcode {cycles: vec![8], length: 2, name: "ADC A, d8".to_string(), opcode: 0x00ce}),
        0x00cf => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x8".to_string(), opcode: 0x00cf}),
        0x00d0 => Ok(Opcode {cycles: vec![20, 8], length: 1, name: "RET NC".to_string(), opcode: 0x00d0}),
        0x00d1 => Ok(Opcode {cycles: vec![12], length: 1, name: "POP DE".to_string(), opcode: 0x00d1}),
        0x00d2 => Ok(Opcode {cycles: vec![16, 12], length: 3, name: "JP  NC, d16".to_string(), opcode: 0x00d2}),
        0x00d4 => Ok(Opcode {cycles: vec![24, 12], length: 3, name: "CALL NC, d16".to_string(), opcode: 0x00d4}),
        0x00d5 => Ok(Opcode {cycles: vec![16], length: 1, name: "PUSH DE".to_string(), opcode: 0x00d5}),
        0x00d6 => Ok(Opcode {cycles: vec![8], length: 2, name: "SUB A, d8".to_string(), opcode: 0x00d6}),
        0x00d7 => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x10".to_string(), opcode: 0x00d7}),
        0x00d8 => Ok(Opcode {cycles: vec![20, 8], length: 1, name: "RET C".to_string(), opcode: 0x00d8}),
        0x00d9 => Ok(Opcode {cycles: vec![16], length: 1, name: "RETI".to_string(), opcode: 0x00d9}),
        0x00da => Ok(Opcode {cycles: vec![16, 12], length: 3, name: "JP  C, d16".to_string(), opcode: 0x00da}),
        0x00dc => Ok(Opcode {cycles: vec![24, 12], length: 3, name: "CALL C, d16".to_string(), opcode: 0x00dc}),
        0x00de => Ok(Opcode {cycles: vec![8], length: 2, name: "SBC A, A, d8".to_string(), opcode: 0x00de}),
        0x00df => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x18".to_string(), opcode: 0x00df}),
        0x00e0 => Ok(Opcode {cycles: vec![12], length: 2, name: "LD ($FF00+d8), A".to_string(), opcode: 0x00e0}),
        0x00e1 => Ok(Opcode {cycles: vec![12], length: 1, name: "POP HL".to_string(), opcode: 0x00e1}),
        0x00e2 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD ($FF00+C), A".to_string(), opcode: 0x00e2}),
        0x00e5 => Ok(Opcode {cycles: vec![16], length: 1, name: "PUSH HL".to_string(), opcode: 0x00e5}),
        0x00e6 => Ok(Opcode {cycles: vec![8], length: 2, name: "AND A, d8".to_string(), opcode: 0x00e6}),
        0x00e7 => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x20".to_string(), opcode: 0x00e7}),
        0x00e8 => Ok(Opcode {cycles: vec![16], length: 2, name: "ADD SP, i8".to_string(), opcode: 0x00e8}),
        0x00e9 => Ok(Opcode {cycles: vec![4], length: 1, name: "JP HL".to_string(), opcode: 0x00e9}),
        0x00ea => Ok(Opcode {cycles: vec![16], length: 3, name: "LD (u16), A".to_string(), opcode: 0x00ea}),
        0x00ee => Ok(Opcode {cycles: vec![8], length: 2, name: "XOR A, d8".to_string(), opcode: 0x00ee}),
        0x00ef => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x28".to_string(), opcode: 0x00ef}),
        0x00f0 => Ok(Opcode {cycles: vec![12], length: 2, name: "LD A, ($FF00+d8)".to_string(), opcode: 0x00f0}),
        0x00f1 => Ok(Opcode {cycles: vec![12], length: 1, name: "POP AF".to_string(), opcode: 0x00f1}),
        0x00f2 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD A, ($FF00+C)".to_string(), opcode: 0x00f2}),
        0x00f3 => Ok(Opcode {cycles: vec![4], length: 1, name: "DI".to_string(), opcode: 0x00f3}),
        0x00f5 => Ok(Opcode {cycles: vec![16], length: 1, name: "PUSH AF".to_string(), opcode: 0x00f5}),
        0x00f6 => Ok(Opcode {cycles: vec![8], length: 2, name: "OR A, d8".to_string(), opcode: 0x00f6}),
        0x00f7 => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x30".to_string(), opcode: 0x00f7}),
        0x00f8 => Ok(Opcode {cycles: vec![12], length: 2, name: "LD HL, SP+i8".to_string(), opcode: 0x00f8}),
        0x00f9 => Ok(Opcode {cycles: vec![8], length: 1, name: "LD SP, HL".to_string(), opcode: 0x00f9}),
        0x00fa => Ok(Opcode {cycles: vec![16], length: 3, name: "LD A, (u16)".to_string(), opcode: 0x00fa}),
        0x00fb => Ok(Opcode {cycles: vec![4], length: 1, name: "EI".to_string(), opcode: 0x00fb}),
        0x00fe => Ok(Opcode {cycles: vec![8], length: 2, name: "CP A, d8".to_string(), opcode: 0x00fe}),
        0x00ff => Ok(Opcode {cycles: vec![16], length: 1, name: "RST 0x38".to_string(), opcode: 0x00ff}),
        0xcb00 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC B".to_string(), opcode: 0xcb00}),
        0xcb01 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC C".to_string(), opcode: 0xcb01}),
        0xcb02 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC D".to_string(), opcode: 0xcb02}),
        0xcb03 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC E".to_string(), opcode: 0xcb03}),
        0xcb04 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC H".to_string(), opcode: 0xcb04}),
        0xcb05 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC L".to_string(), opcode: 0xcb05}),
        0xcb06 => Ok(Opcode {cycles: vec![16], length: 2, name: "RLC (HL)".to_string(), opcode: 0xcb06}),
        0xcb07 => Ok(Opcode {cycles: vec![8], length: 2, name: "RLC A".to_string(), opcode: 0xcb07}),
        0xcb08 => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC B".to_string(), opcode: 0xcb08}),
        0xcb09 => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC C".to_string(), opcode: 0xcb09}),
        0xcb0a => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC D".to_string(), opcode: 0xcb0a}),
        0xcb0b => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC E".to_string(), opcode: 0xcb0b}),
        0xcb0c => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC H".to_string(), opcode: 0xcb0c}),
        0xcb0d => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC L".to_string(), opcode: 0xcb0d}),
        0xcb0e => Ok(Opcode {cycles: vec![16], length: 2, name: "RRC (HL)".to_string(), opcode: 0xcb0e}),
        0xcb0f => Ok(Opcode {cycles: vec![8], length: 2, name: "RRC A".to_string(), opcode: 0xcb0f}),
        0xcb10 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL B".to_string(), opcode: 0xcb10}),
        0xcb11 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL C".to_string(), opcode: 0xcb11}),
        0xcb12 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL D".to_string(), opcode: 0xcb12}),
        0xcb13 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL E".to_string(), opcode: 0xcb13}),
        0xcb14 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL H".to_string(), opcode: 0xcb14}),
        0xcb15 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL L".to_string(), opcode: 0xcb15}),
        0xcb16 => Ok(Opcode {cycles: vec![16], length: 2, name: "RL (HL)".to_string(), opcode: 0xcb16}),
        0xcb17 => Ok(Opcode {cycles: vec![8], length: 2, name: "RL A".to_string(), opcode: 0xcb17}),
        0xcb18 => Ok(Opcode {cycles: vec![8], length: 2, name: "RR B".to_string(), opcode: 0xcb18}),
        0xcb19 => Ok(Opcode {cycles: vec![8], length: 2, name: "RR C".to_string(), opcode: 0xcb19}),
        0xcb1a => Ok(Opcode {cycles: vec![8], length: 2, name: "RR D".to_string(), opcode: 0xcb1a}),
        0xcb1b => Ok(Opcode {cycles: vec![8], length: 2, name: "RR E".to_string(), opcode: 0xcb1b}),
        0xcb1c => Ok(Opcode {cycles: vec![8], length: 2, name: "RR H".to_string(), opcode: 0xcb1c}),
        0xcb1d => Ok(Opcode {cycles: vec![8], length: 2, name: "RR L".to_string(), opcode: 0xcb1d}),
        0xcb1e => Ok(Opcode {cycles: vec![16], length: 2, name: "RR (HL)".to_string(), opcode: 0xcb1e}),
        0xcb1f => Ok(Opcode {cycles: vec![8], length: 2, name: "RR A".to_string(), opcode: 0xcb1f}),
        0xcb20 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA B".to_string(), opcode: 0xcb20}),
        0xcb21 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA C".to_string(), opcode: 0xcb21}),
        0xcb22 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA D".to_string(), opcode: 0xcb22}),
        0xcb23 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA E".to_string(), opcode: 0xcb23}),
        0xcb24 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA H".to_string(), opcode: 0xcb24}),
        0xcb25 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA L".to_string(), opcode: 0xcb25}),
        0xcb26 => Ok(Opcode {cycles: vec![16], length: 2, name: "SLA (HL)".to_string(), opcode: 0xcb26}),
        0xcb27 => Ok(Opcode {cycles: vec![8], length: 2, name: "SLA A".to_string(), opcode: 0xcb27}),
        0xcb28 => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA B".to_string(), opcode: 0xcb28}),
        0xcb29 => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA C".to_string(), opcode: 0xcb29}),
        0xcb2a => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA D".to_string(), opcode: 0xcb2a}),
        0xcb2b => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA E".to_string(), opcode: 0xcb2b}),
        0xcb2c => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA H".to_string(), opcode: 0xcb2c}),
        0xcb2d => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA L".to_string(), opcode: 0xcb2d}),
        0xcb2e => Ok(Opcode {cycles: vec![16], length: 2, name: "SRA (HL)".to_string(), opcode: 0xcb2e}),
        0xcb2f => Ok(Opcode {cycles: vec![8], length: 2, name: "SRA A".to_string(), opcode: 0xcb2f}),
        0xcb30 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP B".to_string(), opcode: 0xcb30}),
        0xcb31 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP C".to_string(), opcode: 0xcb31}),
        0xcb32 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP D".to_string(), opcode: 0xcb32}),
        0xcb33 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP E".to_string(), opcode: 0xcb33}),
        0xcb34 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP H".to_string(), opcode: 0xcb34}),
        0xcb35 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP L".to_string(), opcode: 0xcb35}),
        0xcb36 => Ok(Opcode {cycles: vec![16], length: 2, name: "SWAP (HL)".to_string(), opcode: 0xcb36}),
        0xcb37 => Ok(Opcode {cycles: vec![8], length: 2, name: "SWAP A".to_string(), opcode: 0xcb37}),
        0xcb38 => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL B".to_string(), opcode: 0xcb38}),
        0xcb39 => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL C".to_string(), opcode: 0xcb39}),
        0xcb3a => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL D".to_string(), opcode: 0xcb3a}),
        0xcb3b => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL E".to_string(), opcode: 0xcb3b}),
        0xcb3c => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL H".to_string(), opcode: 0xcb3c}),
        0xcb3d => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL L".to_string(), opcode: 0xcb3d}),
        0xcb3e => Ok(Opcode {cycles: vec![16], length: 2, name: "SRL (HL)".to_string(), opcode: 0xcb3e}),
        0xcb3f => Ok(Opcode {cycles: vec![8], length: 2, name: "SRL A".to_string(), opcode: 0xcb3f}),
        0xcb40 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, B".to_string(), opcode: 0xcb40}),
        0xcb41 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, C".to_string(), opcode: 0xcb41}),
        0xcb42 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, D".to_string(), opcode: 0xcb42}),
        0xcb43 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, E".to_string(), opcode: 0xcb43}),
        0xcb44 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, H".to_string(), opcode: 0xcb44}),
        0xcb45 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, L".to_string(), opcode: 0xcb45}),
        0xcb46 => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 0, (HL)".to_string(), opcode: 0xcb46}),
        0xcb47 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 0, A".to_string(), opcode: 0xcb47}),
        0xcb48 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, B".to_string(), opcode: 0xcb48}),
        0xcb49 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, C".to_string(), opcode: 0xcb49}),
        0xcb4a => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, D".to_string(), opcode: 0xcb4a}),
        0xcb4b => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, E".to_string(), opcode: 0xcb4b}),
        0xcb4c => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, H".to_string(), opcode: 0xcb4c}),
        0xcb4d => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, L".to_string(), opcode: 0xcb4d}),
        0xcb4e => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 1, (HL)".to_string(), opcode: 0xcb4e}),
        0xcb4f => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 1, A".to_string(), opcode: 0xcb4f}),
        0xcb50 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, B".to_string(), opcode: 0xcb50}),
        0xcb51 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, C".to_string(), opcode: 0xcb51}),
        0xcb52 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, D".to_string(), opcode: 0xcb52}),
        0xcb53 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, E".to_string(), opcode: 0xcb53}),
        0xcb54 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, H".to_string(), opcode: 0xcb54}),
        0xcb55 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, L".to_string(), opcode: 0xcb55}),
        0xcb56 => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 2, (HL)".to_string(), opcode: 0xcb56}),
        0xcb57 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 2, A".to_string(), opcode: 0xcb57}),
        0xcb58 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, B".to_string(), opcode: 0xcb58}),
        0xcb59 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, C".to_string(), opcode: 0xcb59}),
        0xcb5a => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, D".to_string(), opcode: 0xcb5a}),
        0xcb5b => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, E".to_string(), opcode: 0xcb5b}),
        0xcb5c => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, H".to_string(), opcode: 0xcb5c}),
        0xcb5d => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, L".to_string(), opcode: 0xcb5d}),
        0xcb5e => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 3, (HL)".to_string(), opcode: 0xcb5e}),
        0xcb5f => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 3, A".to_string(), opcode: 0xcb5f}),
        0xcb60 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, B".to_string(), opcode: 0xcb60}),
        0xcb61 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, C".to_string(), opcode: 0xcb61}),
        0xcb62 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, D".to_string(), opcode: 0xcb62}),
        0xcb63 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, E".to_string(), opcode: 0xcb63}),
        0xcb64 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, H".to_string(), opcode: 0xcb64}),
        0xcb65 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, L".to_string(), opcode: 0xcb65}),
        0xcb66 => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 4, (HL)".to_string(), opcode: 0xcb66}),
        0xcb67 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 4, A".to_string(), opcode: 0xcb67}),
        0xcb68 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, B".to_string(), opcode: 0xcb68}),
        0xcb69 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, C".to_string(), opcode: 0xcb69}),
        0xcb6a => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, D".to_string(), opcode: 0xcb6a}),
        0xcb6b => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, E".to_string(), opcode: 0xcb6b}),
        0xcb6c => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, H".to_string(), opcode: 0xcb6c}),
        0xcb6d => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, L".to_string(), opcode: 0xcb6d}),
        0xcb6e => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 5, (HL)".to_string(), opcode: 0xcb6e}),
        0xcb6f => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 5, A".to_string(), opcode: 0xcb6f}),
        0xcb70 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, B".to_string(), opcode: 0xcb70}),
        0xcb71 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, C".to_string(), opcode: 0xcb71}),
        0xcb72 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, D".to_string(), opcode: 0xcb72}),
        0xcb73 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, E".to_string(), opcode: 0xcb73}),
        0xcb74 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, H".to_string(), opcode: 0xcb74}),
        0xcb75 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, L".to_string(), opcode: 0xcb75}),
        0xcb76 => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 6, (HL)".to_string(), opcode: 0xcb76}),
        0xcb77 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 6, A".to_string(), opcode: 0xcb77}),
        0xcb78 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, B".to_string(), opcode: 0xcb78}),
        0xcb79 => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, C".to_string(), opcode: 0xcb79}),
        0xcb7a => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, D".to_string(), opcode: 0xcb7a}),
        0xcb7b => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, E".to_string(), opcode: 0xcb7b}),
        0xcb7c => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, H".to_string(), opcode: 0xcb7c}),
        0xcb7d => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, L".to_string(), opcode: 0xcb7d}),
        0xcb7e => Ok(Opcode {cycles: vec![16], length: 2, name: "BIT 7, (HL)".to_string(), opcode: 0xcb7e}),
        0xcb7f => Ok(Opcode {cycles: vec![8], length: 2, name: "BIT 7, A".to_string(), opcode: 0xcb7f}),
        0xcb80 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, B".to_string(), opcode: 0xcb80}),
        0xcb81 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, C".to_string(), opcode: 0xcb81}),
        0xcb82 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, D".to_string(), opcode: 0xcb82}),
        0xcb83 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, E".to_string(), opcode: 0xcb83}),
        0xcb84 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, H".to_string(), opcode: 0xcb84}),
        0xcb85 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, L".to_string(), opcode: 0xcb85}),
        0xcb86 => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 0,(HL)".to_string(), opcode: 0xcb86}),
        0xcb87 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 0, A".to_string(), opcode: 0xcb87}),
        0xcb88 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, B".to_string(), opcode: 0xcb88}),
        0xcb89 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, C".to_string(), opcode: 0xcb89}),
        0xcb8a => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, D".to_string(), opcode: 0xcb8a}),
        0xcb8b => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, E".to_string(), opcode: 0xcb8b}),
        0xcb8c => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, H".to_string(), opcode: 0xcb8c}),
        0xcb8d => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, L".to_string(), opcode: 0xcb8d}),
        0xcb8e => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 1,(HL)".to_string(), opcode: 0xcb8e}),
        0xcb8f => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 1, A".to_string(), opcode: 0xcb8f}),
        0xcb90 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, B".to_string(), opcode: 0xcb90}),
        0xcb91 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, C".to_string(), opcode: 0xcb91}),
        0xcb92 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, D".to_string(), opcode: 0xcb92}),
        0xcb93 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, E".to_string(), opcode: 0xcb93}),
        0xcb94 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, H".to_string(), opcode: 0xcb94}),
        0xcb95 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, L".to_string(), opcode: 0xcb95}),
        0xcb96 => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 2,(HL)".to_string(), opcode: 0xcb96}),
        0xcb97 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 2, A".to_string(), opcode: 0xcb97}),
        0xcb98 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, B".to_string(), opcode: 0xcb98}),
        0xcb99 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, C".to_string(), opcode: 0xcb99}),
        0xcb9a => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, D".to_string(), opcode: 0xcb9a}),
        0xcb9b => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, E".to_string(), opcode: 0xcb9b}),
        0xcb9c => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, H".to_string(), opcode: 0xcb9c}),
        0xcb9d => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, L".to_string(), opcode: 0xcb9d}),
        0xcb9e => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 3,(HL)".to_string(), opcode: 0xcb9e}),
        0xcb9f => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 3, A".to_string(), opcode: 0xcb9f}),
        0xcba0 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, B".to_string(), opcode: 0xcba0}),
        0xcba1 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, C".to_string(), opcode: 0xcba1}),
        0xcba2 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, D".to_string(), opcode: 0xcba2}),
        0xcba3 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, E".to_string(), opcode: 0xcba3}),
        0xcba4 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, H".to_string(), opcode: 0xcba4}),
        0xcba5 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, L".to_string(), opcode: 0xcba5}),
        0xcba6 => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 4,(HL)".to_string(), opcode: 0xcba6}),
        0xcba7 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 4, A".to_string(), opcode: 0xcba7}),
        0xcba8 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, B".to_string(), opcode: 0xcba8}),
        0xcba9 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, C".to_string(), opcode: 0xcba9}),
        0xcbaa => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, D".to_string(), opcode: 0xcbaa}),
        0xcbab => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, E".to_string(), opcode: 0xcbab}),
        0xcbac => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, H".to_string(), opcode: 0xcbac}),
        0xcbad => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, L".to_string(), opcode: 0xcbad}),
        0xcbae => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 5,(HL)".to_string(), opcode: 0xcbae}),
        0xcbaf => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 5, A".to_string(), opcode: 0xcbaf}),
        0xcbb0 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, B".to_string(), opcode: 0xcbb0}),
        0xcbb1 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, C".to_string(), opcode: 0xcbb1}),
        0xcbb2 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, D".to_string(), opcode: 0xcbb2}),
        0xcbb3 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, E".to_string(), opcode: 0xcbb3}),
        0xcbb4 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, H".to_string(), opcode: 0xcbb4}),
        0xcbb5 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, L".to_string(), opcode: 0xcbb5}),
        0xcbb6 => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 6,(HL)".to_string(), opcode: 0xcbb6}),
        0xcbb7 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 6, A".to_string(), opcode: 0xcbb7}),
        0xcbb8 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, B".to_string(), opcode: 0xcbb8}),
        0xcbb9 => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, C".to_string(), opcode: 0xcbb9}),
        0xcbba => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, D".to_string(), opcode: 0xcbba}),
        0xcbbb => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, E".to_string(), opcode: 0xcbbb}),
        0xcbbc => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, H".to_string(), opcode: 0xcbbc}),
        0xcbbd => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, L".to_string(), opcode: 0xcbbd}),
        0xcbbe => Ok(Opcode {cycles: vec![16], length: 2, name: "RES 7,(HL)".to_string(), opcode: 0xcbbe}),
        0xcbbf => Ok(Opcode {cycles: vec![8], length: 2, name: "RES 7, A".to_string(), opcode: 0xcbbf}),
        0xcbc0 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, B".to_string(), opcode: 0xcbc0}),
        0xcbc1 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, C".to_string(), opcode: 0xcbc1}),
        0xcbc2 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, D".to_string(), opcode: 0xcbc2}),
        0xcbc3 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, E".to_string(), opcode: 0xcbc3}),
        0xcbc4 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, H".to_string(), opcode: 0xcbc4}),
        0xcbc5 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, L".to_string(), opcode: 0xcbc5}),
        0xcbc6 => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 0,(HL)".to_string(), opcode: 0xcbc6}),
        0xcbc7 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 0, A".to_string(), opcode: 0xcbc7}),
        0xcbc8 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, B".to_string(), opcode: 0xcbc8}),
        0xcbc9 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, C".to_string(), opcode: 0xcbc9}),
        0xcbca => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, D".to_string(), opcode: 0xcbca}),
        0xcbcb => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, E".to_string(), opcode: 0xcbcb}),
        0xcbcc => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, H".to_string(), opcode: 0xcbcc}),
        0xcbcd => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, L".to_string(), opcode: 0xcbcd}),
        0xcbce => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 1,(HL)".to_string(), opcode: 0xcbce}),
        0xcbcf => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 1, A".to_string(), opcode: 0xcbcf}),
        0xcbd0 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, B".to_string(), opcode: 0xcbd0}),
        0xcbd1 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, C".to_string(), opcode: 0xcbd1}),
        0xcbd2 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, D".to_string(), opcode: 0xcbd2}),
        0xcbd3 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, E".to_string(), opcode: 0xcbd3}),
        0xcbd4 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, H".to_string(), opcode: 0xcbd4}),
        0xcbd5 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, L".to_string(), opcode: 0xcbd5}),
        0xcbd6 => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 2,(HL)".to_string(), opcode: 0xcbd6}),
        0xcbd7 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 2, A".to_string(), opcode: 0xcbd7}),
        0xcbd8 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, B".to_string(), opcode: 0xcbd8}),
        0xcbd9 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, C".to_string(), opcode: 0xcbd9}),
        0xcbda => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, D".to_string(), opcode: 0xcbda}),
        0xcbdb => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, E".to_string(), opcode: 0xcbdb}),
        0xcbdc => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, H".to_string(), opcode: 0xcbdc}),
        0xcbdd => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, L".to_string(), opcode: 0xcbdd}),
        0xcbde => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 3,(HL)".to_string(), opcode: 0xcbde}),
        0xcbdf => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 3, A".to_string(), opcode: 0xcbdf}),
        0xcbe0 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, B".to_string(), opcode: 0xcbe0}),
        0xcbe1 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, C".to_string(), opcode: 0xcbe1}),
        0xcbe2 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, D".to_string(), opcode: 0xcbe2}),
        0xcbe3 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, E".to_string(), opcode: 0xcbe3}),
        0xcbe4 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, H".to_string(), opcode: 0xcbe4}),
        0xcbe5 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, L".to_string(), opcode: 0xcbe5}),
        0xcbe6 => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 4,(HL)".to_string(), opcode: 0xcbe6}),
        0xcbe7 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 4, A".to_string(), opcode: 0xcbe7}),
        0xcbe8 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, B".to_string(), opcode: 0xcbe8}),
        0xcbe9 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, C".to_string(), opcode: 0xcbe9}),
        0xcbea => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, D".to_string(), opcode: 0xcbea}),
        0xcbeb => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, E".to_string(), opcode: 0xcbeb}),
        0xcbec => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, H".to_string(), opcode: 0xcbec}),
        0xcbed => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, L".to_string(), opcode: 0xcbed}),
        0xcbee => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 5,(HL)".to_string(), opcode: 0xcbee}),
        0xcbef => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 5, A".to_string(), opcode: 0xcbef}),
        0xcbf0 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, B".to_string(), opcode: 0xcbf0}),
        0xcbf1 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, C".to_string(), opcode: 0xcbf1}),
        0xcbf2 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, D".to_string(), opcode: 0xcbf2}),
        0xcbf3 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, E".to_string(), opcode: 0xcbf3}),
        0xcbf4 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, H".to_string(), opcode: 0xcbf4}),
        0xcbf5 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, L".to_string(), opcode: 0xcbf5}),
        0xcbf6 => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 6,(HL)".to_string(), opcode: 0xcbf6}),
        0xcbf7 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 6, A".to_string(), opcode: 0xcbf7}),
        0xcbf8 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, B".to_string(), opcode: 0xcbf8}),
        0xcbf9 => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, C".to_string(), opcode: 0xcbf9}),
        0xcbfa => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, D".to_string(), opcode: 0xcbfa}),
        0xcbfb => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, E".to_string(), opcode: 0xcbfb}),
        0xcbfc => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, H".to_string(), opcode: 0xcbfc}),
        0xcbfd => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, L".to_string(), opcode: 0xcbfd}),
        0xcbfe => Ok(Opcode {cycles: vec![16], length: 2, name: "SET 7,(HL)".to_string(), opcode: 0xcbfe}),
        0xcbff => Ok(Opcode {cycles: vec![8], length: 2, name: "SET 7, A".to_string(), opcode: 0xcbff}),
        _ => Err("Invalid opcode: {opcode}, opcode: _"),
    }
}